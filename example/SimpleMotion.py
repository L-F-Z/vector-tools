from NewFSM.NewFSM import *

class SimpleMotion(StateMachineProgram):
    def setup(self):
        """
            Forward(50) =C=> Turn(30) =C=> {driver, speaker}
            driver  : Forward(-50) =T(5)=> Say("All Done") =C=> SetHeadAngle(degrees(45)) =C=> photo
            speaker : Say("Save Anki!")
            photo   : TakePicture() =D=> DisplayImageOnScreen(5) =T(5)=> mirror
            mirror  : MirrorMode() =T(5)=>MirrorMode(enable=False)
        """
        
        # Code generated by genfsm on Thu May  2 19:16:43 2019:
        
        forward1 = Forward(50) .set_name("forward1") .set_parent(self)
        turn1 = Turn(30) .set_name("turn1") .set_parent(self)
        driver = Forward(-50) .set_name("driver") .set_parent(self)
        say1 = Say("All Done") .set_name("say1") .set_parent(self)
        setheadangle1 = SetHeadAngle(degrees(45)) .set_name("setheadangle1") .set_parent(self)
        speaker = Say("Save Anki!") .set_name("speaker") .set_parent(self)
        photo = TakePicture() .set_name("photo") .set_parent(self)
        displayimageonscreen1 = DisplayImageOnScreen(5) .set_name("displayimageonscreen1") .set_parent(self)
        mirror = MirrorMode() .set_name("mirror") .set_parent(self)
        mirrormode1 = MirrorMode(enable=False) .set_name("mirrormode1") .set_parent(self)
        
        completiontrans1 = CompletionTrans() .set_name("completiontrans1")
        completiontrans1 .add_sources(forward1) .add_destinations(turn1)
        
        completiontrans2 = CompletionTrans() .set_name("completiontrans2")
        completiontrans2 .add_sources(turn1) .add_destinations(driver,speaker)
        
        timertrans1 = TimerTrans(5) .set_name("timertrans1")
        timertrans1 .add_sources(driver) .add_destinations(say1)
        
        completiontrans3 = CompletionTrans() .set_name("completiontrans3")
        completiontrans3 .add_sources(say1) .add_destinations(setheadangle1)
        
        completiontrans4 = CompletionTrans() .set_name("completiontrans4")
        completiontrans4 .add_sources(setheadangle1) .add_destinations(photo)
        
        datatrans1 = DataTrans() .set_name("datatrans1")
        datatrans1 .add_sources(photo) .add_destinations(displayimageonscreen1)
        
        timertrans2 = TimerTrans(5) .set_name("timertrans2")
        timertrans2 .add_sources(displayimageonscreen1) .add_destinations(mirror)
        
        timertrans3 = TimerTrans(5) .set_name("timertrans3")
        timertrans3 .add_sources(mirror) .add_destinations(mirrormode1)
        
        return self
